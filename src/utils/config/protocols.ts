import {
  APE_MAINNET,
  ARBITRUM_MAINNET,
  AVALANCHE_MAINNET,
  BASE_MAINNET,
  BERA_MAINNET,
  BLAST_MAINNET,
  BNB_MAINNET,
  CRONOS_MAINNET,
  DERIVE_MAINNET,
  DYDX_MAINNET,
  FANTOM_MAINNET,
  HYPERLIQUID_TESTNET,
  LINEA_MAINNET,
  MANTA_MAINNET,
  MANTLE_MAINNET,
  METIS_MAINNET,
  MODE_MAINNET,
  OPBNB_MAINNET,
  OPTIMISM_MAINNET,
  POLYGON_MAINNET,
  POLYNOMIAL_L2_MAINNET,
  SCROLL_MAINNET,
  SOLANA_MAINNET,
  XCHAIN_MAINNET,
  ZKSYNC_ERA_MAINNET,
} from 'utils/web3/chains'

import { BUILD_MODE, LINKS, RELEASED_PROTOCOLS } from './constants'
import { ProtocolEnum } from './enums'

export type ProtocolOptionProps = {
  id: ProtocolEnum
  text: string
  label: string
  chainId: number | string
  isNew?: boolean
  isCross?: boolean
  key: string
  linkTrade?: string
}

// TODO: Check when add new protocol
//@ts-ignore
export const PROTOCOL_OPTIONS_MAPPING: Record<ProtocolEnum, ProtocolOptionProps> = {
  [ProtocolEnum.GMX_V2_AVAX]: {
    id: ProtocolEnum.GMX_V2_AVAX,
    text: 'GMX V2',
    label: 'Avalanche',
    chainId: AVALANCHE_MAINNET,
    key: 'GMAV2',
    linkTrade: LINKS.tradeGMXv2,
  },
  [ProtocolEnum.GMX_V2]: {
    id: ProtocolEnum.GMX_V2,
    text: 'GMX V2',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    key: 'GMA2',
    linkTrade: LINKS.tradeGMXv2,
  },
  [ProtocolEnum.GMX]: {
    id: ProtocolEnum.GMX,
    text: 'GMX',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    key: 'GMA',
    linkTrade: LINKS.tradeGMX,
  },
  [ProtocolEnum.GMX_AVAX]: {
    id: ProtocolEnum.GMX_AVAX,
    text: 'GMX',
    label: 'Avalanche',
    chainId: AVALANCHE_MAINNET,
    key: 'GMAV',
    linkTrade: LINKS.tradeGMX,
  },
  [ProtocolEnum.GMX_SOL]: {
    id: ProtocolEnum.GMX_SOL,
    text: 'GMX',
    label: 'Solana',
    chainId: SOLANA_MAINNET,
    key: 'GMS',
    linkTrade: LINKS.tradeGMXSol,
  },
  [ProtocolEnum.KWENTA]: {
    id: ProtocolEnum.KWENTA,
    text: 'Kwenta',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    key: 'KWO',
    linkTrade: LINKS.tradeKwenta,
  },
  [ProtocolEnum.POLYNOMIAL]: {
    id: ProtocolEnum.POLYNOMIAL,
    text: 'Polynomial',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    key: 'POO',
    linkTrade: LINKS.tradePolynomial,
  },
  [ProtocolEnum.POLYNOMIAL_L2]: {
    id: ProtocolEnum.POLYNOMIAL_L2,
    text: 'Polynomial',
    label: 'Polynomial L2',
    chainId: POLYNOMIAL_L2_MAINNET,
    isNew: true,
    key: 'POP',
  },
  [ProtocolEnum.GNS]: {
    id: ProtocolEnum.GNS,
    text: 'gTrade',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    key: 'GNA',
    linkTrade: LINKS.tradeGains,
  },
  [ProtocolEnum.GNS_POLY]: {
    id: ProtocolEnum.GNS_POLY,
    text: 'gTrade',
    label: 'Polygon',
    chainId: POLYGON_MAINNET,
    key: 'GNP',
    linkTrade: LINKS.tradeGains,
  },
  [ProtocolEnum.GNS_BASE]: {
    id: ProtocolEnum.GNS_BASE,
    text: 'gTrade',
    label: 'Base',
    chainId: BASE_MAINNET,
    key: 'GNB',
    isNew: true,
    linkTrade: LINKS.tradeGains,
  },
  [ProtocolEnum.GNS_APE]: {
    id: ProtocolEnum.GNS_APE,
    text: 'gTrade',
    label: 'Ape Chain',
    chainId: APE_MAINNET,
    key: 'GNA2',
    isNew: true,
    linkTrade: LINKS.tradeGains,
  },
  [ProtocolEnum.LEVEL_BNB]: {
    id: ProtocolEnum.LEVEL_BNB,
    text: 'Level',
    label: 'BNB Chain',
    chainId: BNB_MAINNET,
    key: 'LEB',
    linkTrade: LINKS.tradeLevel,
  },
  [ProtocolEnum.LEVEL_ARB]: {
    id: ProtocolEnum.LEVEL_ARB,
    text: 'Level',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    key: 'LEA',
    linkTrade: LINKS.tradeLevel,
  },
  [ProtocolEnum.MUX_ARB]: {
    id: ProtocolEnum.MUX_ARB,
    text: 'MUX',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'MUA',
  },
  [ProtocolEnum.EQUATION_ARB]: {
    id: ProtocolEnum.EQUATION_ARB,
    text: 'Equation',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'EQA',
  },
  [ProtocolEnum.BLOOM_BLAST]: {
    id: ProtocolEnum.BLOOM_BLAST,
    text: 'Bloom',
    label: 'Blast',
    chainId: BLAST_MAINNET,
    isNew: false,
    key: 'BLB',
    linkTrade: LINKS.tradeBloom,
  },
  [ProtocolEnum.APOLLOX_BNB]: {
    id: ProtocolEnum.APOLLOX_BNB,
    text: 'ApolloX',
    label: 'BNB Chain',
    chainId: BNB_MAINNET,
    isNew: false,
    key: 'APB',
    linkTrade: LINKS.tradeApolloX,
  },
  [ProtocolEnum.APOLLOX_BASE]: {
    id: ProtocolEnum.APOLLOX_BASE,
    text: 'ApolloX',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: false,
    key: 'APB2',
    linkTrade: LINKS.tradeApolloX,
  },
  [ProtocolEnum.AVANTIS_BASE]: {
    id: ProtocolEnum.AVANTIS_BASE,
    text: 'Avantis',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: false,
    key: 'AVB',
    linkTrade: LINKS.tradeAvantis,
  },
  [ProtocolEnum.TIGRIS_ARB]: {
    id: ProtocolEnum.TIGRIS_ARB,
    text: 'Tigris',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'TIA',
    linkTrade: LINKS.tradeTigris,
  },
  [ProtocolEnum.LOGX_BLAST]: {
    id: ProtocolEnum.LOGX_BLAST,
    text: 'LogX',
    label: 'Blast',
    chainId: BLAST_MAINNET,
    isNew: false,
    key: 'LOB',
    linkTrade: LINKS.tradeLogX,
  },
  [ProtocolEnum.LOGX_MODE]: {
    id: ProtocolEnum.LOGX_MODE,
    text: 'LogX',
    label: 'Mode',
    chainId: MODE_MAINNET,
    isNew: false,
    key: 'LOM',
    linkTrade: LINKS.tradeLogX,
  },
  [ProtocolEnum.MYX_ARB]: {
    id: ProtocolEnum.MYX_ARB,
    text: 'MYX',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'MYA',
    linkTrade: LINKS.tradeMyx,
  },
  [ProtocolEnum.MYX_OPBNB]: {
    id: ProtocolEnum.MYX_OPBNB,
    text: 'MYX',
    label: 'opBNB',
    chainId: OPBNB_MAINNET,
    isNew: true,
    key: 'MYO',
    linkTrade: LINKS.tradeMyx,
  },
  [ProtocolEnum.MYX_LINEA]: {
    id: ProtocolEnum.MYX_LINEA,
    text: 'MYX',
    label: 'Linea',
    chainId: LINEA_MAINNET,
    isNew: false,
    key: 'MYL',
    linkTrade: LINKS.tradeMyx,
  },
  [ProtocolEnum.HMX_ARB]: {
    id: ProtocolEnum.HMX_ARB,
    text: 'HMX',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    isCross: true,
    key: 'HMA',
    linkTrade: LINKS.tradeHmx,
  },
  [ProtocolEnum.DEXTORO]: {
    id: ProtocolEnum.DEXTORO,
    text: 'DexToro',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    isNew: false,
    key: 'DEO',
    linkTrade: LINKS.tradeDexToro,
  },
  [ProtocolEnum.VELA_ARB]: {
    id: ProtocolEnum.VELA_ARB,
    text: 'Vela',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'VEA',
  },
  [ProtocolEnum.SYNTHETIX_V3_ARB]: {
    id: ProtocolEnum.SYNTHETIX_V3_ARB,
    text: 'Synthetix V3',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    isCross: true,
    key: 'SYA',
  },
  [ProtocolEnum.SYNTHETIX_V3]: {
    id: ProtocolEnum.SYNTHETIX_V3,
    text: 'Synthetix V3',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: false,
    isCross: true,
    key: 'SYB3',
  },
  [ProtocolEnum.SYNTHETIX]: {
    id: ProtocolEnum.SYNTHETIX,
    text: 'Synthetix',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    isNew: true,
    isCross: true,
    key: 'SYO',
  },
  [ProtocolEnum.COPIN]: {
    id: ProtocolEnum.COPIN,
    text: 'Copin',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    isNew: true,
    key: 'COO',
  },
  [ProtocolEnum.KTX_MANTLE]: {
    id: ProtocolEnum.KTX_MANTLE,
    text: 'KTX',
    label: 'Mantle',
    chainId: MANTLE_MAINNET,
    isNew: false,
    key: 'KTM',
  },
  [ProtocolEnum.CYBERDEX]: {
    id: ProtocolEnum.CYBERDEX,
    text: 'CyberDEX',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    isNew: false,
    key: 'CYO',
    linkTrade: LINKS.tradeCyberDEX,
  },
  [ProtocolEnum.YFX_ARB]: {
    id: ProtocolEnum.YFX_ARB,
    text: 'YFX',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'YFA',
    linkTrade: LINKS.tradeYfx,
  },
  [ProtocolEnum.KILOEX_OPBNB]: {
    id: ProtocolEnum.KILOEX_OPBNB,
    text: 'KiloEx',
    label: 'opBNB',
    chainId: OPBNB_MAINNET,
    isNew: false,
    key: 'KIO',
    linkTrade: LINKS.tradeKiloEx,
  },
  [ProtocolEnum.KILOEX_BNB]: {
    id: ProtocolEnum.KILOEX_BNB,
    text: 'KiloEx',
    label: 'BNB Chain',
    chainId: BNB_MAINNET,
    isNew: true,
    key: 'KIB',
    linkTrade: LINKS.tradeKiloEx,
  },
  [ProtocolEnum.KILOEX_BASE]: {
    id: ProtocolEnum.KILOEX_BASE,
    text: 'KiloEx',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'KIB2',
    linkTrade: LINKS.tradeKiloEx,
  },
  [ProtocolEnum.KILOEX_MANTA]: {
    id: ProtocolEnum.KILOEX_MANTA,
    text: 'KiloEx',
    label: 'Manta',
    chainId: MANTA_MAINNET,
    isNew: true,
    key: 'KIM',
    linkTrade: LINKS.tradeKiloEx,
  },
  [ProtocolEnum.ROLLIE_SCROLL]: {
    id: ProtocolEnum.ROLLIE_SCROLL,
    text: 'Rollie',
    label: 'Scroll',
    chainId: SCROLL_MAINNET,
    isNew: false,
    key: 'ROS',
  },
  [ProtocolEnum.PERENNIAL_ARB]: {
    id: ProtocolEnum.PERENNIAL_ARB,
    text: 'Perennial',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: false,
    key: 'PEA',
  },
  [ProtocolEnum.MUMMY_FANTOM]: {
    id: ProtocolEnum.MUMMY_FANTOM,
    text: 'Mummy',
    label: 'Fantom',
    chainId: FANTOM_MAINNET,
    isNew: false,
    key: 'MUF',
  },
  [ProtocolEnum.MORPHEX_FANTOM]: {
    id: ProtocolEnum.MORPHEX_FANTOM,
    text: 'Morphex',
    label: 'Fantom',
    chainId: FANTOM_MAINNET,
    isNew: false,
    key: 'MOF',
  },
  [ProtocolEnum.HYPERLIQUID]: {
    id: ProtocolEnum.HYPERLIQUID,
    text: 'Hyperliquid',
    label: 'Hyperliquid',
    isNew: false,
    chainId: HYPERLIQUID_TESTNET,
    key: 'HLP',
  },
  [ProtocolEnum.SYNFUTURE_BASE]: {
    id: ProtocolEnum.SYNFUTURE_BASE,
    text: 'Synfutures',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: false,
    key: 'SYB',
    linkTrade: LINKS.tradeSynfutures,
  },
  [ProtocolEnum.DYDX]: {
    id: ProtocolEnum.DYDX,
    text: 'dYdX',
    label: 'dydX Chain',
    chainId: DYDX_MAINNET,
    isNew: true,
    key: 'DYD',
  },
  [ProtocolEnum.BSX_BASE]: {
    id: ProtocolEnum.BSX_BASE,
    text: 'BSX',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'BSB',
  },
  [ProtocolEnum.UNIDEX_ARB]: {
    id: ProtocolEnum.UNIDEX_ARB,
    text: 'UniDex',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'UNA',
  },
  [ProtocolEnum.VERTEX_ARB]: {
    id: ProtocolEnum.VERTEX_ARB,
    text: 'Vertex',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'VEA2',
  },
  [ProtocolEnum.LINEHUB_LINEA]: {
    id: ProtocolEnum.LINEHUB_LINEA,
    text: 'LineHub',
    label: 'Linea',
    chainId: LINEA_MAINNET,
    isNew: true,
    key: 'LIL',
  },
  [ProtocolEnum.FOXIFY_ARB]: {
    id: ProtocolEnum.FOXIFY_ARB,
    text: 'Foxify',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'FOA',
  },
  [ProtocolEnum.BMX_BASE]: {
    id: ProtocolEnum.BMX_BASE,
    text: 'BMX Classic',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'BMB',
  },
  [ProtocolEnum.DEPERP_BASE]: {
    id: ProtocolEnum.DEPERP_BASE,
    text: 'DePerp',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'DEB',
  },
  [ProtocolEnum.HORIZON_BNB]: {
    id: ProtocolEnum.HORIZON_BNB,
    text: 'Horizon',
    label: 'BNB Chain',
    chainId: BNB_MAINNET,
    isNew: true,
    key: 'HOB',
  },
  [ProtocolEnum.IDEX]: {
    id: ProtocolEnum.IDEX,
    text: 'IDEX',
    label: 'XCHAIN',
    chainId: XCHAIN_MAINNET,
    isNew: true,
    key: 'IDX',
  },
  [ProtocolEnum.HOLDSTATION_ZKSYNC]: {
    id: ProtocolEnum.HOLDSTATION_ZKSYNC,
    text: 'Holdstation',
    label: 'zkSync Era',
    chainId: ZKSYNC_ERA_MAINNET,
    isNew: true,
    key: 'HOZ',
  },
  [ProtocolEnum.HOLDSTATION_BERA]: {
    id: ProtocolEnum.HOLDSTATION_BERA,
    text: 'Holdstation',
    label: 'Berachain',
    chainId: BERA_MAINNET,
    isNew: true,
    key: 'HOB2',
  },
  [ProtocolEnum.ZENO_METIS]: {
    id: ProtocolEnum.ZENO_METIS,
    text: 'Zeno',
    label: 'Metis',
    chainId: METIS_MAINNET,
    isNew: true,
    key: 'ZEM',
  },
  [ProtocolEnum.SYMMIO_BASE]: {
    id: ProtocolEnum.SYMMIO_BASE,
    text: 'Symmio',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'SYM',
  },
  [ProtocolEnum.INTENTX_BASE]: {
    id: ProtocolEnum.INTENTX_BASE,
    text: 'IntentX',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'INB',
  },
  [ProtocolEnum.BASED_BASE]: {
    id: ProtocolEnum.BASED_BASE,
    text: 'Based',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'BAB',
  },
  [ProtocolEnum.DERIVE]: {
    id: ProtocolEnum.DERIVE,
    text: 'Derive',
    label: 'Derive',
    chainId: DERIVE_MAINNET,
    isNew: true,
    key: 'DED',
  },
  [ProtocolEnum.FULCROM_CRONOS]: {
    id: ProtocolEnum.FULCROM_CRONOS,
    text: 'Fulcrom',
    label: 'Cronos',
    chainId: CRONOS_MAINNET,
    isNew: true,
    key: 'FUC',
  },
  [ProtocolEnum.JOJO_BASE]: {
    id: ProtocolEnum.JOJO_BASE,
    text: 'JOJO',
    label: 'Base',
    chainId: BASE_MAINNET,
    isNew: true,
    key: 'JOB',
  },
  [ProtocolEnum.ELFI_ARB]: {
    id: ProtocolEnum.ELFI_ARB,
    text: 'ELFi',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'ELA',
  },
  [ProtocolEnum.JUPITER]: {
    id: ProtocolEnum.JUPITER,
    text: 'Jupiter',
    label: 'Solana',
    chainId: SOLANA_MAINNET,
    isNew: true,
    key: 'JUL',
  },
  [ProtocolEnum.PERPETUAL_OP]: {
    id: ProtocolEnum.PERPETUAL_OP,
    text: 'Perpetual V2',
    label: 'Optimism',
    chainId: OPTIMISM_MAINNET,
    isNew: true,
    key: 'PEO',
  },
  [ProtocolEnum.PINGU_ARB]: {
    id: ProtocolEnum.PINGU_ARB,
    text: 'Pingu',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'PIA',
  },
  [ProtocolEnum.OSTIUM_ARB]: {
    id: ProtocolEnum.OSTIUM_ARB,
    text: 'Ostium',
    label: 'Arbitrum',
    chainId: ARBITRUM_MAINNET,
    isNew: true,
    key: 'OSA',
  },
}

export const PROTOCOL_OPTIONS: ProtocolOptionProps[] =
  BUILD_MODE === 'production'
    ? RELEASED_PROTOCOLS.map((e) => PROTOCOL_OPTIONS_MAPPING[e])
    : Object.values(ProtocolEnum).map((e) => PROTOCOL_OPTIONS_MAPPING[e])

// TODO: Check when add new protocol
export const PROTOCOLS_CROSS_MARGIN = [
  ProtocolEnum.HMX_ARB,
  ProtocolEnum.SYNTHETIX_V3,
  ProtocolEnum.SYNTHETIX_V3_ARB,
  ProtocolEnum.HYPERLIQUID,
  ProtocolEnum.DYDX,
  ProtocolEnum.BSX_BASE,
  ProtocolEnum.VERTEX_ARB,
  ProtocolEnum.IDEX,
  ProtocolEnum.POLYNOMIAL_L2,
  ProtocolEnum.ZENO_METIS,
  ProtocolEnum.DERIVE,
  ProtocolEnum.JOJO_BASE,
  ProtocolEnum.ELFI_ARB,
]

export const PROTOCOL_USE_SIZE_NUMBER_TO_CALC: ProtocolEnum[] = [
  ProtocolEnum.SYNTHETIX,
  ProtocolEnum.KWENTA,
  ProtocolEnum.POLYNOMIAL,
  ProtocolEnum.DEXTORO,
  ProtocolEnum.CYBERDEX,
  ProtocolEnum.COPIN,
]
export const PROTOCOLS_IN_TOKEN: ProtocolEnum[] = []
export const PROTOCOLS_IN_TOKEN_COLLATERAL: ProtocolEnum[] = [ProtocolEnum.LINEHUB_LINEA, ProtocolEnum.PINGU_ARB]

// TODO: Check when add new protocol special like synthetix v3, gmx v2, gns
export const PROTOCOL_LISTENER_MAPPING: Record<string, ProtocolEnum> = {
  // gnsPoly: ProtocolEnum.GNS_POLY,
  gnsArb: ProtocolEnum.GNS,
  gmxV1Arb: ProtocolEnum.GMX,
  gmx_V2Arb: ProtocolEnum.GMX_V2,
  // muxArb: ProtocolEnum.MUX_ARB,
  // equationArb: ProtocolEnum.EQUATION_ARB,
  // levelArb: ProtocolEnum.LEVEL_ARB,
  // levelBnb: ProtocolEnum.LEVEL_BNB,
  synthetixOp: ProtocolEnum.KWENTA,
  mirrorSignalSnxOp: ProtocolEnum.KWENTA,
  mirrorSignalGnsArb: ProtocolEnum.GNS,
  mirrorSignalLevelArb: ProtocolEnum.LEVEL_ARB,
  mirrorSignalLevelBnb: ProtocolEnum.LEVEL_BNB,
  // velaArb: ProtocolEnum.VELA_ARB,
  // avantisBase: ProtocolEnum.AVANTIS_BASE,
  // ktxMantle: ProtocolEnum.KTX_MANTLE,
  // yfxArb: ProtocolEnum.YFX_ARB,
  // hmxArb: ProtocolEnum.HMX_ARB,
  // myxArb: ProtocolEnum.MYX_ARB,
  // apolloxBnb: ProtocolEnum.APOLLOX_BNB,
  // synthetixV3Base: ProtocolEnum.SYNTHETIX_V3,
  // kiloexOpbnb: ProtocolEnum.KILOEX_OPBNB,
  // rollieScroll: ProtocolEnum.ROLLIE_SCROLL,
  // logxBlast: ProtocolEnum.LOGX_BLAST,
  // logxMode: ProtocolEnum.LOGX_MODE,
  // bsxBase: ProtocolEnum.BSX_BASE,
  synthetix_v3Base: ProtocolEnum.SYNTHETIX_V3,
}
